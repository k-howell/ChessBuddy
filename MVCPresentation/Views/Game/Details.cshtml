@model MVCPresentation.Models.GameBoardViewModel
@using DataObjects
<script>
    @*function updateBoard() {
        // update tile classes
        @for(char f = 'a'; f <= 'h'; f++)
        {
            for(int r = 1; r <= 8; r++)
            {
                Piece piece = Model.Board.pieceAt("" + f + r);
                if(piece != null)
                {
                    <text>
                        $("tr[rank='@r'] td[file='@f']").addClass("@(piece.Type)-@piece.Color");
                    </text>
                }
            }
        }
    }*@
    var turn = 0;
    var side = "White";

    function nextMove() {
        $.ajax({
            url: '@Url.Action("SetTurn", "Game")',
            data: { gameID: @Model.Game.GameID, turn: turn + 1, side: side },
            type: 'POST',
            success: function (result) {
                if (result) {
                    // alert("Success!!");
                    $('#board-container').html(result);
                    if (turn < @Model.Game.Moves.Count) {
                        turn++;
                    }
                }
            }
        });
    }

    function prevMove() {
        $.ajax({
            url: '@Url.Action("SetTurn", "Game")',
            data: { gameID: @Model.Game.GameID, turn: turn - 1, side: side },
            type: 'POST',
            success: function (result) {
                if (result) {
                    // alert("Success!!");
                    $('#board-container').html(result);
                    if (turn > 0) {
                        turn--;
                    }
                }
            }
        });
    }

    function reset() {
        $.ajax({
            url: '@Url.Action("SetTurn", "Game")',
            data: { gameID: @Model.Game.GameID, turn: 0, side: side },
            type: 'POST',
            success: function (result) {
                if (result) {
                    // alert("Reset");
                    $('#board-container').html(result);
                    turn = 0;
                }
            }
        });
    }

    function flip() {
        if (side == "White") {
            side = "Black";
        }
        else {
            side = "White";
        }

        $.ajax({
            url: '@Url.Action("SetTurn", "Game")',
            data: { gameID: @Model.Game.GameID, turn: turn, side: side },
            type: 'POST',
            success: function (result) {
                if (result) {
                    // alert("Success!!");
                    $('#board-container').html(result);
                }
            }
        });
    }

    function addFavorite() {
        $.ajax({
            url: '@Url.Action("AddFavorite", "Game")',
            data: { gameID: @Model.Game.GameID },
            type: 'POST',
            success: function (result) {
                if (result) {
                    alert("Added to favorites");
                    $('#btnFavorite').html('Remove from Favorites');
                    $('#btnFavorite').attr('onclick', 'removeFavorite()');
                }
            }
        });
    }

    function removeFavorite() {
        $.ajax({
            url: '@Url.Action("RemoveFavorite", "Game")',
            data: { gameID: @Model.Game.GameID },
            type: 'POST',
            success: function (result) {
                if (result) {
                    alert("Removed from favorites");
                    $('#btnFavorite').html('Add to Favorites');
                    $('#btnFavorite').attr('onclick', 'addFavorite()');
                }
            }
        });
    }

    document.addEventListener("DOMContentLoaded", function (event) {
        reset();
    });
</script>
<div class="row">
    <div class="col-2 d-none d-md-block pt-5">
        <h5 class="text-center">White:</h5>
        <h4 class="text-center">@Model.Game.PlayerWhite</h4>
        <p class="text-center">Elo: @Model.Game.WhiteElo</p>
    </div>
    <div class="col-md-8 col-sm-12 col-xl-7 m-auto">
        <div id="board-container">

        </div>
        <div>
            <div class="row mt-2">
                <a class="btn btn-primary w-25 me-5 ms-auto" onclick="prevMove()">Prev Move</a>
                <a class="btn btn-primary w-25 ms-5 me-auto" onclick="nextMove()">Next Move</a>
            </div>
            <div class="row my-1">
                <a class="btn btn-primary w-100 my-1 mx-auto" onclick="flip()">Flip</a>
                <a class="btn btn-primary w-100 my-1 mx-auto" onclick="reset()">Reset</a>
                @if (User.Identity.IsAuthenticated)
                {
                    <a class="btn btn-primary w-100 my-1 mx-auto" onclick="addFavorite()">Add to Favorites</a>
                }
            </div>
        </div>
        @*@Html.Partial("_BoardPartial", Model)*@
    </div>
    <div class="col-2 d-none d-md-block pt-5">
        <h5 class="text-center">Black:</h5>
        <h4 class="text-center">@Model.Game.PlayerBlack</h4>
        <p class="text-center">Elo: @Model.Game.BlackElo</p>
    </div>
</div>
<div class="row d-md-none">
    <div class="col-6">
        <h5 class="text-center">White:</h5>
        <h4 class="text-center">@Model.Game.PlayerWhite</h4>
        <p class="text-center">Elo: @Model.Game.WhiteElo</p>
    </div>
    <div class="col-6">
        <h5 class="text-center">Black:</h5>
        <h4 class="text-center">@Model.Game.PlayerBlack</h4>
        <p class="text-center">Elo: @Model.Game.BlackElo</p>
    </div>
</div>
<div class="row">
    <h4 class="text-center">Opening:</h4>
    <p class="text-center">@Model.Game.Opening</p>
    <p class="text-center">Played on @Model.Game.DisplayDatePlayed</p>
</div>